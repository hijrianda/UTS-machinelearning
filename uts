{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPdpAuWrWov9zbH1raa4r4/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"JRpMM0wEEcd0"},"outputs":[],"source":["# Import necessary libraries\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_squared_error, r2_score"]},{"cell_type":"code","source":["# Load the dataset\n","\n","df = pd.read_csv(\"/content/CarPrice_Assignment.csv\")"],"metadata":{"id":"d4YZAGBeE5MX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Display the first few rows of the dataset\n","\n","df.head()"],"metadata":{"id":"uLwBvuqkFQRR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\tcar_ID\tsymboling\tCarName\tfueltype\taspiration\tdoornumber\tcarbody\tdrivewheel\tenginelocation\twheelbase\t...\tenginesize\tfuelsystem\tboreratio\tstroke\tcompressionratio\thorsepower\tpeakrpm\tcitympg\thighwaympg\tprice\n","0\t1\t3\talfa-romero giulia\tgas\tstd\ttwo\tconvertible\trwd\tfront\t88.6\t...\t130\tmpfi\t3.47\t2.68\t9.0\t111\t5000\t21\t27\t13495.0\n","1\t2\t3\talfa-romero stelvio\tgas\tstd\ttwo\tconvertible\trwd\tfront\t88.6\t...\t130\tmpfi\t3.47\t2.68\t9.0\t111\t5000\t21\t27\t16500.0\n","2\t3\t1\talfa-romero Quadrifoglio\tgas\tstd\ttwo\thatchback\trwd\tfront\t94.5\t...\t152\tmpfi\t2.68\t3.47\t9.0\t154\t5000\t19\t26\t16500.0\n","3\t4\t2\taudi 100 ls\tgas\tstd\tfour\tsedan\tfwd\tfront\t99.8\t...\t109\tmpfi\t3.19\t3.40\t10.0\t102\t5500\t24\t30\t13950.0\n","4\t5\t2\taudi 100ls\tgas\tstd\tfour\tsedan\t4wd\tfront\t99.4\t...\t136\tmpfi\t3.19\t3.40\t8.0\t115\t5500\t18\t22\t17450.0\n","5 rows Ã— 26 columns\n","\n"],"metadata":{"id":"uBRZnkK8FQ7N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Check the shape (number of rows and columns) of the dataset\n","\n","df.shape\n","\n","(205, 26)"],"metadata":{"id":"HDmvbfsJFeoe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Display information about the dataset (data types, non-null counts, etc.)\n","\n","df.info()\n","\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 205 entries, 0 to 204\n","Data columns (total 26 columns):\n"," #   Column            Non-Null Count  Dtype\n","---  ------            --------------  -----\n"," 0   car_ID            205 non-null    int64\n"," 1   symboling         205 non-null    int64\n"," 2   CarName           205 non-null    object\n"," 3   fueltype          205 non-null    object\n"," 4   aspiration        205 non-null    object\n"," 5   doornumber        205 non-null    object\n"," 6   carbody           205 non-null    object\n"," 7   drivewheel        205 non-null    object\n"," 8   enginelocation    205 non-null    object\n"," 9   wheelbase         205 non-null    float64\n"," 10  carlength         205 non-null    float64\n"," 11  carwidth          205 non-null    float64\n"," 12  carheight         205 non-null    float64\n"," 13  curbweight        205 non-null    int64\n"," 14  enginetype        205 non-null    object\n"," 15  cylindernumber    205 non-null    object\n"," 16  enginesize        205 non-null    int64\n"," 17  fuelsystem        205 non-null    object\n"," 18  boreratio         205 non-null    float64\n"," 19  stroke            205 non-null    float64\n"," 20  compressionratio  205 non-null    float64\n"," 21  horsepower        205 non-null    int64\n"," 22  peakrpm           205 non-null    int64\n"," 23  citympg           205 non-null    int64\n"," 24  highwaympg        205 non-null    int64\n"," 25  price             205 non-null    float64\n","dtypes: float64(8), int64(8), object(10)\n","memory usage: 41.8+ KB"],"metadata":{"id":"qHTz1nujFjlD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Check for missing values in the dataset\n","\n","df.isnull().sum()\n","\n","car_ID              0\n","symboling           0\n","CarName             0\n","fueltype            0\n","aspiration          0\n","doornumber          0\n","carbody             0\n","drivewheel          0\n","enginelocation      0\n","wheelbase           0\n","carlength           0\n","carwidth            0\n","carheight           0\n","curbweight          0\n","enginetype          0\n","cylindernumber      0\n","enginesize          0\n","fuelsystem          0\n","boreratio           0\n","stroke              0\n","compressionratio    0\n","horsepower          0\n","peakrpm             0\n","citympg             0\n","highwaympg          0\n","price               0\n","dtype: int64\n"],"metadata":{"id":"ebBWJKtCF0jU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the column names\n","\n","df.columns\n","\n","Index(['car_ID', 'symboling', 'CarName', 'fueltype', 'aspiration',\n","       'doornumber', 'carbody', 'drivewheel', 'enginelocation', 'wheelbase',\n","       'carlength', 'carwidth', 'carheight', 'curbweight', 'enginetype',\n","       'cylindernumber', 'enginesize', 'fuelsystem', 'boreratio', 'stroke',\n","       'compressionratio', 'horsepower', 'peakrpm', 'citympg', 'highwaympg',\n","       'price'],\n","      dtype='object')"],"metadata":{"id":"8wx_t_HmF5jq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","car_ID\tsymboling\twheelbase\tcarlength\tcarwidth\tcarheight\tcurbweight\tenginesize\tboreratio\tstroke\tcompressionratio\thorsepower\tpeakrpm\tcitympg\thighwaympg\tprice\n","count\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\t205.000000\n","mean\t103.000000\t0.834146\t98.756585\t174.049268\t65.907805\t53.724878\t2555.565854\t126.907317\t3.329756\t3.255415\t10.142537\t104.117073\t5125.121951\t25.219512\t30.751220\t13276.710571\n","std\t59.322565\t1.245307\t6.021776\t12.337289\t2.145204\t2.443522\t520.680204\t41.642693\t0.270844\t0.313597\t3.972040\t39.544167\t476.985643\t6.542142\t6.886443\t7988.852332\n","min\t1.000000\t-2.000000\t86.600000\t141.100000\t60.300000\t47.800000\t1488.000000\t61.000000\t2.540000\t2.070000\t7.000000\t48.000000\t4150.000000\t13.000000\t16.000000\t5118.000000\n","25%\t52.000000\t0.000000\t94.500000\t166.300000\t64.100000\t52.000000\t2145.000000\t97.000000\t3.150000\t3.110000\t8.600000\t70.000000\t4800.000000\t19.000000\t25.000000\t7788.000000\n","50%\t103.000000\t1.000000\t97.000000\t173.200000\t65.500000\t54.100000\t2414.000000\t120.000000\t3.310000\t3.290000\t9.000000\t95.000000\t5200.000000\t24.000000\t30.000000\t10295.000000\n","75%\t154.000000\t2.000000\t102.400000\t183.100000\t66.900000\t55.500000\t2935.000000\t141.000000\t3.580000\t3.410000\t9.400000\t116.000000\t5500.000000\t30.000000\t34.000000\t16503.000000\n","max\t205.000000\t3.000000\t120.900000\t208.100000\t72.300000\t59.800000\t4066.000000\t326.000000\t3.940000\t4.170000\t23.000000\t288.000000\t6600.000000\t49.000000\t54.000000\t45400.000000"],"metadata":{"id":"eXnAlx1WGHAV"},"execution_count":null,"outputs":[]}]}